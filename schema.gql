# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type BaseEntityWithUuid {
  id: ID!
  uuid: String!
}

input CreateItemInput {
  orderId: Float!
  blindId: Float!
  width: Float!
  height: Float!
  handrailType: String = "R"
}

type Customer {
  id: ID!
  uuid: String!
  name: String!
  address: String!
  phone: String!
  email: String!
  orders: [Order!]!
  type: String!
  note: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Fabric {
  id: ID!
  uuid: String!
  name: String!
  color: String!
  manufacturer: String!
  grade: String!
}

type Grade {
  id: ID!
  uuid: String!
  name: String!
  price: Float!
}

type Item {
  id: ID!
  uuid: String!
  blindId: Float!
  width: Float!
  height: Float!
  handrailMaterial: Material!
  handrailType: String!
}

enum Material {
  ROPE
  BEADS
  METAL
}

type Mutation {
  registerCustomer(note: String!, email: String!, address: String!, phone: String!, name: String!): Customer!
  registerGrade(price: Float!, name: String!): Grade!
  registerFabric(grade: String!, color: String!, manufacturer: String!, name: String!): Fabric!
  createItem(data: CreateItemInput!): Item!
  placeOrder(data: PlaceOrderInput!): Order!
}

type Order {
  id: ID!
  uuid: String!
  orderNo: String!
  hst: Boolean!
  deposit: Float!
  installation: Float!
  total: Float
  items: [Item!]!
  status: Status!
  payment: String!
  orderDate: DateTime!
  installDate: DateTime!
}

input PlaceOrderInput {
  customerId: Float!
  orderNo: String!
  hst: Boolean
  deposit: Float
  installation: Float
  status: String
  payment: String
}

type Query {
  getCustomers: [Customer!]!
  getOrder(orderNo: String!): Order!
  getOrders: [Order!]!
}

enum Status {
  MEASURE
  MANUFACTURE
  INSTALL
  RAMAINING
  COMPLETE
}
